import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import random
from scipy import interpolate


#This is a sample code that can be used to interpolate data.
#Since the plots without interpolation are sharp, we interpolate the data.
#This gives us a smooth plot and also better accuracy.

arr=[[[4624.0, 1600.0, 1600.0, 1681.0, 961.0, 841.0, 900.0, 1024.0, 1600.0, 8836.0, 15625.0, 9604.0, 5476.0, 5329.0, 3025.0, 2304.0, 1681.0, 2704.0, 3600.0, 3969.0], [2500.0, 2304.0, 1369.0, 1600.0, 1089.0, 784.0, 729.0, 784.0, 1225.0, 4624.0, 8836.0, 6724.0, 5476.0, 5625.0, 3600.0, 3600.0, 3364.0, 4489.0, 4900.0, 3844.0], [2401.0, 2809.0, 1849.0, 1521.0, 1600.0, 1156.0, 841.0, 784.0, 1521.0, 3481.0, 4225.0, 2500.0, 1600.0, 3136.0, 5041.0, 5929.0, 5625.0, 3721.0, 5776.0, 7921.0], [4356.0, 3844.0, 1600.0, 1600.0, 2304.0, 1681.0, 1764.0, 1600.0, 2401.0, 7056.0, 9604.0, 4624.0, 1089.0, 2500.0, 5476.0, 6084.0, 5041.0, 1936.0, 2916.0, 7921.0], [2401.0, 1444.0, 729.0, 961.0, 2401.0, 3364.0, 3136.0, 1600.0, 1600.0, 4489.0, 5929.0, 2809.0, 1444.0, 2209.0, 3249.0, 4096.0, 3721.0, 2916.0, 3025.0, 3721.0], [2209.0, 3481.0, 2401.0, 1849.0, 3136.0, 5476.0, 5329.0, 2500.0, 2500.0, 12544.0, 18225.0, 7056.0, 1369.0, 2500.0, 3249.0, 4096.0, 3844.0, 4356.0, 7396.0, 5476.0], [4356.0, 6084.0, 3025.0, 1936.0, 2809.0, 4900.0, 5041.0, 3481.0, 1225.0, 5776.0, 10816.0, 4761.0, 3364.0, 4356.0, 3969.0, 4489.0, 6724.0, 10404.0, 8464.0, 5329.0], [3136.0, 3364.0, 2304.0, 1600.0, 2916.0, 5184.0, 3969.0, 4489.0, 6889.0, 21904.0, 34969.0, 12769.0, 4096.0, 4761.0, 3136.0, 3969.0, 9409.0, 14400.0, 8464.0, 7056.0], [2500.0, 961.0, 1764.0, 1849.0, 3364.0, 7744.0, 2304.0, 3364.0, 15376.0, 101124.0, 149769.0, 58081.0, 3025.0, 4761.0, 5041.0, 7744.0, 7396.0, 6561.0, 8281.0, 17161.0], [1936.0, 4900.0, 1764.0, 9216.0, 2601.0, 16900.0, 2209.0, 15376.0, 118336.0, 1317904.0, 2070721.0, 753424.0, 7396.0, 34596.0, 10201.0, 29584.0, 9801.0, 4761.0, 6241.0, 21904.0], [3249.0, 14161.0, 2500.0, 19044.0, 2209.0, 26896.0, 5625.0, 33856.0, 255025.0, 2782224.0, 4363921.0, 1575025.0, 18225.0, 70225.0, 17689.0, 54289.0, 21904.0, 16384.0, 5041.0, 17161.0], [2916.0, 10404.0, 1849.0, 11881.0, 2704.0, 20164.0, 4900.0, 24649.0, 173056.0, 1836025.0, 2856100.0, 1024144.0, 15876.0, 48400.0, 16129.0, 38809.0, 23104.0, 19044.0, 4624.0, 8836.0], [1681.0, 2704.0, 1521.0, 2116.0, 2500.0, 6241.0, 2916.0, 7744.0, 26569.0, 266256.0, 410881.0, 145924.0, 4900.0, 11449.0, 6561.0, 9604.0, 14641.0, 14161.0, 4624.0, 2916.0], [2500.0, 2116.0, 1444.0, 729.0, 1225.0, 1849.0, 2916.0, 3481.0, 3600.0, 8464.0, 15129.0, 10000.0, 3721.0, 3600.0, 5929.0, 7569.0, 12321.0, 10609.0, 3136.0, 1296.0], [1849.0, 1936.0, 1156.0, 1024.0, 1369.0, 1369.0, 1600.0, 1681.0, 2704.0, 14641.0, 24025.0, 13689.0, 3844.0, 4225.0, 6400.0, 8100.0, 9409.0, 5929.0, 1764.0, 1089.0], [1764.0, 2401.0, 2025.0, 2601.0, 1225.0, 196.0, 784.0, 961.0, 2601.0, 7569.0, 13924.0, 11449.0, 5776.0, 5041.0, 3364.0, 3025.0, 3481.0, 2500.0, 1681.0, 1089.0], [900.0, 1444.0, 2704.0, 2304.0, 729.0, 841.0, 900.0, 900.0, 2401.0, 10000.0, 16129.0, 11236.0, 5625.0, 2704.0, 2304.0, 3249.0, 3136.0, 2601.0, 1849.0, 900.0], [1225.0, 2116.0, 1936.0, 961.0, 1681.0, 2304.0, 1024.0, 529.0, 900.0, 2916.0, 3969.0, 2704.0, 1296.0, 841.0, 1681.0, 3364.0, 5625.0, 4761.0, 2704.0, 1681.0], [1936.0, 1764.0, 1225.0, 1024.0, 1521.0, 1681.0, 1089.0, 1521.0, 3600.0, 9216.0, 11236.0, 4900.0, 841.0, 1225.0, 2116.0, 2704.0, 4624.0, 4761.0, 2704.0, 1156.0], [1296.0, 1296.0, 1521.0, 2116.0, 2116.0, 1089.0, 1369.0, 2401.0, 1936.0, 1444.0, 1849.0, 1089.0, 289.0, 1369.0, 1849.0, 1849.0, 2916.0, 2916.0, 1681.0, 784.0]], [[729.0, 676.0, 1024.0, 1225.0, 900.0, 900.0, 1024.0, 1225.0, 1369.0, 3364.0, 12544.0, 17689.0, 11664.0, 18496.0, 41616.0, 36481.0, 8649.0, 576.0, 2116.0, 1936.0], [784.0, 1024.0, 841.0, 841.0, 441.0, 441.0, 576.0, 441.0, 1444.0, 4096.0, 9604.0, 10404.0, 5776.0, 5184.0, 7056.0, 5625.0, 1296.0, 361.0, 1089.0, 1369.0], [1225.0, 1444.0, 900.0, 784.0, 961.0, 841.0, 676.0, 784.0, 441.0, 961.0, 2601.0, 3969.0, 6561.0, 8464.0, 5776.0, 1600.0, 441.0, 324.0, 256.0, 361.0], [900.0, 1024.0, 729.0, 1296.0, 2025.0, 1521.0, 1156.0, 1089.0, 729.0, 2401.0, 4761.0, 4624.0, 16129.0, 35344.0, 28224.0, 7744.0, 1024.0, 676.0, 1089.0, 784.0], [1024.0, 529.0, 324.0, 1089.0, 1849.0, 1521.0, 1156.0, 1521.0, 1849.0, 11025.0, 23716.0, 16384.0, 21025.0, 48400.0, 40401.0, 10816.0, 1369.0, 900.0, 1089.0, 1681.0], [484.0, 441.0, 324.0, 961.0, 1444.0, 1156.0, 729.0, 1936.0, 3364.0, 34969.0, 75076.0, 45796.0, 13689.0, 23409.0, 19881.0, 5329.0, 784.0, 1296.0, 625.0, 1600.0], [1296.0, 1521.0, 729.0, 441.0, 1681.0, 1369.0, 441.0, 841.0, 2809.0, 7056.0, 10609.0, 7569.0, 3844.0, 4900.0, 3249.0, 961.0, 625.0, 1225.0, 625.0, 1369.0], [3136.0, 3364.0, 1764.0, 1024.0, 1681.0, 1444.0, 289.0, 2209.0, 2704.0, 11449.0, 27225.0, 22201.0, 9604.0, 5329.0, 3025.0, 1156.0, 841.0, 1024.0, 625.0, 1681.0], [2304.0, 3481.0, 1681.0, 576.0, 1369.0, 2500.0, 1089.0, 2704.0, 2809.0, 32761.0, 81225.0, 53824.0, 11664.0, 11025.0, 5625.0, 1764.0, 841.0, 729.0, 1024.0, 1521.0], [1764.0, 5625.0, 1369.0, 4900.0, 1444.0, 15876.0, 2304.0, 14641.0, 21025.0, 628849.0, 1517824.0, 942841.0, 92416.0, 22801.0, 9216.0, 7225.0, 2209.0, 5625.0, 3481.0, 5776.0], [2704.0, 11025.0, 1681.0, 14161.0, 1024.0, 29241.0, 3364.0, 33124.0, 55225.0, 1590121.0, 3790809.0, 2325625.0, 219024.0, 34596.0, 10000.0, 19881.0, 4900.0, 12544.0, 5625.0, 11236.0], [2916.0, 10609.0, 1444.0, 10000.0, 1156.0, 19881.0, 3721.0, 23104.0, 47524.0, 1227664.0, 2883204.0, 1745041.0, 160801.0, 32041.0, 9216.0, 17161.0, 5625.0, 10816.0, 4225.0, 6889.0], [2704.0, 4900.0, 1296.0, 1681.0, 1849.0, 5041.0, 2500.0, 5041.0, 11664.0, 242064.0, 550564.0, 327184.0, 33489.0, 16900.0, 6724.0, 3364.0, 4900.0, 6084.0, 2704.0, 2500.0], [1936.0, 2500.0, 1936.0, 1600.0, 1681.0, 676.0, 1600.0, 1764.0, 1225.0, 1600.0, 4489.0, 8464.0, 8464.0, 7569.0, 7056.0, 9216.0, 8281.0, 3364.0, 1681.0, 2601.0], [1156.0, 1936.0, 2601.0, 1849.0, 1369.0, 1296.0, 1521.0, 1444.0, 2601.0, 9216.0, 20736.0, 16641.0, 6561.0, 5476.0, 8281.0, 14641.0, 11025.0, 3721.0, 1369.0, 1444.0], [1296.0, 1936.0, 3481.0, 2916.0, 1600.0, 1849.0, 2304.0, 3844.0, 1369.0, 1764.0, 6561.0, 5184.0, 4489.0, 5776.0, 5929.0, 7569.0, 9025.0, 5184.0, 1764.0, 1600.0], [1600.0, 2025.0, 3025.0, 3025.0, 1936.0, 1936.0, 2809.0, 3844.0, 1156.0, 3249.0, 10609.0, 9409.0, 7225.0, 7921.0, 5776.0, 3481.0, 4356.0, 3364.0, 1600.0, 1444.0], [1089.0, 1089.0, 1369.0, 1296.0, 1600.0, 2116.0, 1936.0, 1600.0, 2025.0, 3844.0, 4489.0, 2209.0, 5476.0, 12100.0, 8836.0, 3025.0, 3025.0, 2809.0, 2401.0, 2500.0], [784.0, 625.0, 1089.0, 1681.0, 2304.0, 1681.0, 1764.0, 2025.0, 2809.0, 7744.0, 10816.0, 4225.0, 3481.0, 10816.0, 7056.0, 4356.0, 9409.0, 7569.0, 3364.0, 2304.0], [1024.0, 576.0, 1024.0, 1936.0, 3249.0, 2025.0, 1764.0, 3136.0, 3025.0, 3481.0, 3249.0, 1764.0, 3025.0, 5776.0, 3136.0, 4624.0, 11025.0, 10201.0, 5625.0, 2209.0]], [[1296.0, 1849.0, 2601.0, 3481.0, 3364.0, 5041.0, 6561.0, 6724.0, 15625.0, 85264.0, 151321.0, 85264.0, 12544.0, 11881.0, 15376.0, 13456.0, 9604.0, 6561.0, 2304.0, 441.0], [1600.0, 2704.0, 3844.0, 4225.0, 3969.0, 4489.0, 4761.0, 5476.0, 13689.0, 48841.0, 78400.0, 46225.0, 16129.0, 28900.0, 26244.0, 27225.0, 41209.0, 31329.0, 14641.0, 7569.0], [2601.0, 3600.0, 3025.0, 2209.0, 3364.0, 4356.0, 2401.0, 3600.0, 5929.0, 50176.0, 111556.0, 60516.0, 17424.0, 60025.0, 76729.0, 173056.0, 230400.0, 114921.0, 40401.0, 23104.0], [2809.0, 3364.0, 1444.0, 1600.0, 4761.0, 6561.0, 4489.0, 5476.0, 4489.0, 79524.0, 178929.0, 104329.0, 19321.0, 104976.0, 312481.0, 485809.0, 376996.0, 127449.0, 25921.0, 19600.0], [1369.0, 2916.0, 1600.0, 4225.0, 7569.0, 8464.0, 5625.0, 5041.0, 6084.0, 77841.0, 143641.0, 72900.0, 10404.0, 85264.0, 357604.0, 462400.0, 255025.0, 85849.0, 17161.0, 4624.0], [841.0, 2601.0, 2704.0, 6561.0, 7569.0, 7225.0, 4624.0, 3721.0, 7569.0, 142129.0, 297025.0, 156816.0, 21025.0, 68644.0, 133956.0, 140625.0, 85264.0, 63001.0, 36100.0, 4761.0], [676.0, 2500.0, 2209.0, 5776.0, 8464.0, 7744.0, 2601.0, 2500.0, 14161.0, 164836.0, 311364.0, 172225.0, 61504.0, 93636.0, 98596.0, 64009.0, 27889.0, 31329.0, 26896.0, 14400.0], [3249.0, 6561.0, 2304.0, 7921.0, 11236.0, 11881.0, 1296.0, 3969.0, 23716.0, 300304.0, 570025.0, 284089.0, 47961.0, 77284.0, 91809.0, 76729.0, 18769.0, 9409.0, 10201.0, 16641.0], [9216.0, 12321.0, 10816.0, 24025.0, 14884.0, 47961.0, 5476.0, 54289.0, 201601.0, 3041536.0, 5987809.0, 3279721.0, 328329.0, 35721.0, 16384.0, 32761.0, 5184.0, 23716.0, 9216.0, 19600.0], [38809.0, 81796.0, 47961.0, 173056.0, 47089.0, 326041.0, 32761.0, 369664.0, 1814409.0, 25918280.0, 50140560.0, 26522500.0, 2056356.0, 351649.0, 49729.0, 289444.0, 30976.0, 153664.0, 38025.0, 96100.0], [69696.0, 160801.0, 79524.0, 318096.0, 78400.0, 592900.0, 55225.0, 632025.0, 3437316.0, 48149720.0, 92756160.0, 48720400.0, 3470769.0, 795664.0, 117649.0, 537289.0, 67081.0, 289444.0, 73441.0, 168921.0], [44100.0, 100489.0, 52441.0, 190969.0, 49284.0, 367236.0, 32761.0, 366025.0, 2146225.0, 29441476.0, 56475224.0, 29680704.0, 2050624.0, 529984.0, 94864.0, 295936.0, 37636.0, 199809.0, 52441.0, 95481.0], [8836.0, 15129.0, 12321.0, 27556.0, 8464.0, 54289.0, 7569.0, 48400.0, 306916.0, 4032064.0, 7656289.0, 4060225.0, 292681.0, 71824.0, 22201.0, 33489.0, 10000.0, 42436.0, 12321.0, 11881.0], [3025.0, 3721.0, 2500.0, 3136.0, 1936.0, 5929.0, 4900.0, 4900.0, 10000.0, 142884.0, 283024.0, 141376.0, 7225.0, 5184.0, 2304.0, 6400.0, 5929.0, 4624.0, 2916.0, 4356.0], [2116.0, 2809.0, 2116.0, 1764.0, 3364.0, 10609.0, 6241.0, 7056.0, 18769.0, 219961.0, 413449.0, 214369.0, 14884.0, 5329.0, 2500.0, 1849.0, 1936.0, 5041.0, 2601.0, 3364.0], [3136.0, 3136.0, 1225.0, 2304.0, 1521.0, 2916.0, 6084.0, 6084.0, 10000.0, 103041.0, 203401.0, 105625.0, 6241.0, 5929.0, 1600.0, 4225.0, 3600.0, 2116.0, 1296.0, 1225.0], [3600.0, 1764.0, 1936.0, 5476.0, 4624.0, 3025.0, 3969.0, 4096.0, 9409.0, 95481.0, 187489.0, 103684.0, 10609.0, 7396.0, 2704.0, 2025.0, 1225.0, 1936.0, 961.0, 841.0], [1849.0, 3721.0, 4096.0, 6561.0, 9409.0, 7744.0, 6241.0, 4761.0, 4225.0, 59049.0, 122500.0, 69169.0, 10816.0, 6084.0, 2601.0, 4225.0, 3136.0, 484.0, 961.0, 1681.0], [2209.0, 6400.0, 4761.0, 3136.0, 7056.0, 11236.0, 9216.0, 5625.0, 5929.0, 89401.0, 185761.0, 104329.0, 10816.0, 5476.0, 2809.0, 4761.0, 2704.0, 1444.0, 1764.0, 625.0], [4624.0, 3600.0, 3969.0, 1225.0, 3481.0, 9409.0, 5329.0, 1936.0, 3249.0, 17689.0, 27556.0, 14161.0, 3481.0, 2601.0, 3481.0, 2916.0, 2025.0, 900.0, 1296.0, 1600.0]]]

#arr1 is sample data of 20*20 subsets around three corner reflectors.


arr1=[]
for i in range(4,16):
    temparr=[]
    for j in range(4,16):
        temparr.append(arr[1][i][j])
    arr1.append(temparr)

#Since plotting an interpolated 20*20 matrix is a heavy task and also that much of an area around the corner reflector is not necessary, so here we create a 12*12 submatrix out of the 20*20 one.

xs= ys = np.arange(0,12,1)
xx,yy=np.meshgrid(xs,ys)
zs = np.array([arr1[x][y] for x,y in zip(np.ravel(xx),np.ravel(yy))])
zz = zs.reshape(xx.shape)
f=interpolate.interp2d(xx,yy,zz,kind='cubic')
xnew = np.arange(0,12,0.25)
ynew = np.arange(0,12,0.25)
znew = f(xnew,ynew)
zn = znew.tolist()
print(zn)

fig = plt.figure()
ax = fig.add_subplot(111,projection='3d')
x=y=np.arange(0,48,1)
X,Y = np.meshgrid(x,y)
zk = np.array([zn[x][y] for x,y in zip(np.ravel(X),np.ravel(Y))])
Z = zk.reshape(X.shape)
surf = ax.plot_surface(X,Y,Z,rstride=1, cstride=1,cmap = 'Reds')
fig.colorbar(surf,shrink=0.5, aspect=1)
plt.show()